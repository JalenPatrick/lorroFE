{"version":3,"file":"static/development/pages/results.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Fonts.js","webpack:///./components/Header.js","webpack:///./components/Layout.js","webpack:///./pages/results.js","webpack:///./pages/script-1.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardActionArea\"","webpack:///external \"@material-ui/core/CardActions\"","webpack:///external \"@material-ui/core/CardMedia\"","webpack:///external \"@material-ui/core/CircularProgress\"","webpack:///external \"@material-ui/core/CssBaseline\"","webpack:///external \"@material-ui/core/ExpansionPanel\"","webpack:///external \"@material-ui/core/ExpansionPanelDetails\"","webpack:///external \"@material-ui/core/ExpansionPanelSummary\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/LinearProgress\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/ExpandMore\"","webpack:///external \"axios\"","webpack:///external \"http\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-dom\"","webpack:///external \"recharts\"","webpack:///external \"victory\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Fonts = () => (\n  <div>\n    <link href=\"https://fonts.googleapis.com/css?family=Srisakdi:700\" rel=\"stylesheet\"/>\n    <link href=\"https://fonts.googleapis.com/css?family=Permanent+Marker\" rel=\"stylesheet\"/>\n    <link href=\"https://fonts.googleapis.com/css?family=Merienda\" rel=\"stylesheet\"/>\n    <link href=\"https://fonts.googleapis.com/css?family=Lato\" rel=\"stylesheet\"/>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\"/>\n    <script src=\"https://cdn.WebRTC-Experiment.com/RecordRTC.js\"/>\n  </div>\n)\n\nexport default Fonts","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport Link from 'next/link'\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Fonts from '../components/Fonts'\n\n\nconst styles = {\n    marginLeft: 10\n}\n\nconst Header = () => (\n    <div>\n        <Fonts/>\n        <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n                <Link href=\"/\">\n                    <Typography variant=\"h5\" color=\"inherit\" gutterBottom style={{fontFamily:'Merienda'}}>\n                        Lorro\n                    </Typography>\n                </Link>\n            </Toolbar>\n        </AppBar>\n    </div>\n)\n\nexport default Header","import Header from './Header'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link'\n\nconst layoutStyle = {\n    margin: 20,\n    padding: 20,\n    border: '1px solid #DDD'\n}\n\nconst Layout = (props) => (\n    <CssBaseline>\n        <Header />\n        <div>\n            {props.children}\n        </div>\n    </CssBaseline>\n)\n\nexport default Layout","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Layout from '../components/Layout'\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport {start, parseFile} from './script-1';\nimport { Typography, ButtonBase, DialogTitle, CardContent, CardHeader, Button } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Fonts from '../components/Fonts'\nimport { \n    AreaChart,\n    Area,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    ResponsiveContainer,\n    Label,\n    Radar,\n    RadarChart,\n    PolarGrid,\n    PolarAngleAxis,\n    PolarRadiusAxis\n} from 'recharts';\n\n// var fs = require('fs')\nimport * as V from 'victory';\nimport axios from 'axios'\n\n\nconst yourCard = {\n    borderTop: \"5px solid #0097a7\",\n    borderRadius: \"5px\"\n}\n\nconst sampleCard = {\n    borderTop: \"5px solid #ec407a\",\n    borderRadius: \"5px\",\n    margin: \"5vh 0 5vh 0\",\n}\n\nconst loadingStyle = {\n    textAlign: \"center\",\n    marginTop:'-10',\n    backgroundColor: \"#e0e0e0\",\n    height: '100vh'\n}\n\nconst displayStyle = {\n    textAlign: \"center\",\n    marginTop:'-10',\n    backgroundColor: \"#e0e0e0\",\n    height: 'auto'\n}\n\nconst wrap = {\n    overflowWrap: \"break-word\",\n    wordWrap: \"break-word\"\n}\n\nclass results extends Component {\n    constructor() {\n        super()\n        this.state = {\n            isLoading: true,\n            rawPhonemes: null,\n            segmentedPhonemes: null,\n            noteProgression: null,\n            frequencies: null\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({isLoading: true})\n        // console.log(this.props)\n        // console.log(window.location.search)\n        const process_url = \"https://3qub47bp42.execute-api.us-east-2.amazonaws.com/prod/process\"\n        const transcribe_url = \"https://3qub47bp42.execute-api.us-east-2.amazonaws.com/prod/transcribe\"\n        // get file name from query param\n        const fileName = window.location.search.split('=')[1]\n        console.log(fileName)\n\n        let transcribe\n        \n        // get info from backend and take what we need\n        await axios.post(process_url, fileName).then(response => {\n            console.log(response)\n            console.log('post success')\n            const data = response.data\n\n            const sampleLength = data.segmented_phonemes\n\n            this.setState({\n                isLoading: false,\n                rawPhonemes: data.segmented_phonemes,\n                segmentedPhonemes: data.backend_decoded,\n                noteProgression: data.note_progression,\n                frequencies: data.fundamental_frequencies\n            })\n        })\n\n        await axios.post(process_url, fileName).then(response => {\n            console.log(response)\n            console.log('post success')\n            const data = response.data\n\n            const sampleLength = data.segmented_phonemes\n\n            this.setState({\n                \n            })\n        })\n    }\n\n    getFreqData = (freqArray, phonemeArray, notesArray) => {\n        console.log(freqArray)\n        console.log(phonemeArray)\n        let dataArray = []\n\n        if (freqArray)\n            for (let i = 0; i < freqArray.length; i++) {\n                let dataObject = {\n                    freq: Math.round(freqArray[i]),\n                    phoneme: phonemeArray[i],\n                    note: notesArray[i]\n                }\n                dataArray.push(dataObject)\n            }\n        console.log(dataArray)\n        return dataArray\n    }\n\n    // used to contruct the radial plot which displays the users accuracy to the target sample\n    // based on 3 main fields\n    // 1. Pitch --> average spoken word frequency over the sample\n    // 2. Word Accuracy --> how correct the words are (use confidence from AWS)\n    // 3. Timing --> raw duration of the samples\n    getCompareData = (freqArray, wordArray) => {\n        let avgFreq, totalSum, totalFreqs, speakingTime;\n        \n        if (freqArray) {\n            for (let i = 0; i < freqArray.length; i++) {\n                if (freqArray[i] != 0) {\n                    totalSum += freqArray[i];\n                    totalFreqs += 1;\n                }\n            }\n        }\n        \n\n        speakingTime = totalFreqs * 0.02;\n        avgFreq = totalSum/totalFreqs;\n\n        const pitchObject = {\n            category: \"Pitch Matching\",\n            value: 65,\n            fullMark: 100 \n        }\n\n        const wordAccuracyObject = {\n            category: \"Word Matching\",\n            value: 90,\n            fullMark: 100 \n        }\n        \n        const timingObject = {\n            category: \"Timing Matching\",\n            value: 30,\n            fullMark: 100 \n        }\n\n        const dataArray = [pitchObject, wordAccuracyObject, timingObject]\n        return dataArray;\n    }\n\n    render() {\n    const isLoading = this.state.isLoading\n    const freqGraphData = this.getFreqData(this.state.frequencies, this.state.rawPhonemes, this.state.noteProgression)\n    const compareGraphData = this.getCompareData(this.state.frequencies, [])\n    return(\n        <Layout>\n        <Fonts/>\n            {isLoading ? (\n                <Paper elevation={\"1\"}>\n                    <Grid container spacing={24} style={loadingStyle} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" justify=\"center\">\n                        <Grid item xs={12} md={12} style={{padding:\"0 30px 0 30px\"}}>\n                            {/* https://s3.us-east-2.amazonaws.com/lorro/5f52814c-4865-11e9-8577-eb571fcec879.wav */}\n                            <Typography variant=\"h2\" gutterBottom style={{color:'black', fontFamily:'Merienda', fontSize: '7vmax'}}> Analyzing Your Speech Sample... </Typography>\n                            <LinearProgress style={{flexGrow:1}}/> \n                        </Grid>\n                    </Grid>\n                </Paper>\n            ) : (\n                <Paper elevation={\"1\"}>\n                    <Grid item xs={12} md={12} style={{padding:\"0 30px 0 30px\"}}>\n                        <Grid container spacing={24} style={displayStyle} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" justify=\"center\">\n                            {/* Summary card */}\n                            <Grid item xs={12} md={12} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={sampleCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h2\" gutterBottom> Results Summary </Typography>\n                                        {/* <Typography variant=\"h4\"> Your overall Lorro accuracy was __% </Typography>\n                                        <Typography variant=\"body\"> View a detailed breakdown of your comparisson below </Typography> */}\n                                        <Typography variant=\"h4\" gutterBottom> Fundamental frequencies vs. spoken phoneme </Typography>\n                                        <Typography variant=\"body\"> Hover over the chart to see the phoneme spoken and what pitch it was spoken at </Typography>\n                                        <ResponsiveContainer width='100%' aspect={4.0/2.0}>\n                                        <AreaChart data={freqGraphData} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                                            <CartesianGrid strokeDasharray=\"3 3\" />\n                                            <XAxis dataKey=\"phoneme\" hide={true}>\n                                                <Label value=\"Detected Phoneme\" offset={10} position=\"bottom\" />\n                                            </XAxis>\n                                            <YAxis label={{ value: 'Fundamental Frequency (hz)', angle: -90, position: 'insideLeft'}}/>\n                                            <Tooltip />\n                                            <Area type=\"monotone\" dataKey=\"freq\" stroke=\"#8884d8\" fill=\"#8884d8\" unit=\"hz\" activeDot={{ r: 8 }} />\n                                            <Area type=\"monotone\" dataKey=\"note\" stroke=\"#8884d8\" dot={false} />\n                                        </AreaChart>\n                                        </ResponsiveContainer>\n                                    </CardContent>\n                                </Card>\n                                \n                                <Card style={sampleCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h2\" gutterBottom> Comparision to Sample </Typography>\n                                        <ResponsiveContainer width='100%' aspect={4.0/2.0}>\n                                        <RadarChart data={compareGraphData} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                                            <PolarGrid />\n                                            <PolarAngleAxis dataKey=\"category\" />\n                                            <PolarRadiusAxis />\n                                            <Tooltip />\n                                            <Radar name='accuracy' unit='%' dataKey='value' stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n                                        </RadarChart>\n                                        </ResponsiveContainer>\n                                    </CardContent>\n                                </Card>\n\n                                <Card style={sampleCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h2\" gutterBottom> View Raw Data </Typography>\n                                        <ExpansionPanel>\n                                            <ExpansionPanelSummary>\n                                                <Typography variant=\"body\" gutterBottom style={{textAlign: \"center\"}}> Click to open </Typography>\n                                            </ExpansionPanelSummary>\n                                            <ExpansionPanelDetails>\n                                                <Grid container spacing={24} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" justify=\"center\">\n                                                    {/* Summary card */}\n                                                    <Grid item xs={12} md={12} style={{margin:\"0 15px 0 5px\", width:'100%'}}>\n                                                        <Typography variant=\"h5\" gutterBottom> Phonemes </Typography>\n                                                        <Typography style={wrap} variant=\"body\"> {this.state.segmentedPhonemes} </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={12} md={12} style={{margin:\"0 15px 0 5px\", width:'100%'}}>\n                                                        <Typography variant=\"h5\" gutterBottom> Note Progression </Typography>\n                                                        <Typography style={wrap} variant=\"body\"> {this.state.noteProgression} </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={12} md={12} style={{margin:\"0 15px 0 5px\", width:'100%'}}>\n                                                        <Typography variant=\"h5\" gutterBottom> Fundamental Frequencies </Typography>\n                                                        <Typography style={wrap} variant=\"body\"> {this.state.frequencies} </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </ExpansionPanelDetails>\n                                        </ExpansionPanel>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            {/* words comparison */}\n                            {/* <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={yourCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Words you </Typography>\n                                        content goes here\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={sampleCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Words sample </Typography>\n                                        content goes here\n                                    </CardContent>\n                                </Card>\n                            </Grid> */}\n\n                            {/* phoneme comparison */}\n                            {/* <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={yourCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Phonemes you </Typography>\n                                        {this.state.segmentedPhonemes}\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={sampleCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Phonemes sample </Typography>\n                                        content goes here\n                                    </CardContent>\n                                </Card>\n                            </Grid> */}\n\n                            {/* pitch comparison */}\n                            {/* <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={yourCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Pitch you </Typography>\n                                        {this.state.noteProgression}\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={sampleCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Pitch sample </Typography>\n                                        content goes here\n                                    </CardContent>\n                                </Card>\n                            </Grid> */}\n\n                            {/* pacing comparison */}\n                            {/* <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={yourCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Pacing you </Typography>\n                                        content goes here\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12} md={6} style={{padding:\"0 30px 0 30px\"}}>\n                                <Card style={sampleCard}>\n                                    <CardContent>\n                                        <Typography variant=\"h4\"> Pacing sample </Typography>\n                                        content goes here\n                                    </CardContent>\n                                </Card>\n                            </Grid> */}\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )}\n        </Layout>  \n    )}\n}\n\nexport default results","var http = require('http');\n// var fs = require('fs');\n\nfunction readFile(file, callback){\n\tvar raw_file = new XMLHttpRequest();\n\traw_file.overrideMimeType(\"application/json\");\n\traw_file.open(\"get\", file, true);\n\traw_file.onreadystatechange = function() {\n\t\tif (raw_file.readyState == 4 && raw_file.status == \"200\")\n\t\t\tcallback(raw_file.responseText);\n\t}\n\traw_file.send(null);\n}\n\nexport function start() {\n\treadFile(\"/static/images/results/notes.json\", run);\n\treadFile(\"/static/images/results/text.txt\", otherRun1);\n\treadFile(\"/static/images/results/phoneme.txt\", otherRun2);\n\treadFile(\"/static/images/results/phoneme.txt\", otherRun2);\n}\n\nexport function parseFile(file) {\n\tconsole.log(file);\n}\n\n\n\nfunction otherRun1(file) {\n\tvar body = document.querySelector(\".result-2\");\n\tbody.innerHTML = file;\n}\n\nfunction otherRun2(file) {\n\tvar body = document.querySelector(\".result-3\");\n\tbody.innerHTML = file;\n}\n\nfunction parse(file) {\n\tvar body = document.querySelector(\".result-4\")\n\tbody.innerHTML = file;\n}\n\nfunction run (json) {\n\tvar notesArr = JSON.parse(json);\n\tvar index;\n\tvar last_bold;\n\tvar interval = null;\n\n\tfunction play() {\n\t\tif (interval) stop();\n\t\tindex = 0;\n\t\tlast_bold = 0;\n\t\tplay_next();\n\t\tinterval = setInterval(play_next, 10);\n\t}\n\n\tfunction play_next() {\n\t\tif (index >= notesArr.length) {\n\t\t\tstop();\n\t\t\treturn;\n\t\t}\n\t\tif (new_note(index)) {\n\t\t\tunbold(last_bold);\n\t\t\tbold(index);\n\t\t}\n\t\tindex++;\n\t}\n\n\tfunction stop() {\n\t\tclearInterval(interval);\n\t\tinterval = null;\n\t\tunbold(last_bold);\n\t}\n\n\tfunction bold(ind) {\n\t\tdocument.querySelector(`.note-${ind}`).classList.add(\"note_bold\");\n\t\tdocument.querySelector(`.note-${ind}`).style.fontWeight = \"bold\";\n\t\tdocument.querySelector(`.note-${ind}`).style.fontSize = \"30px\";\n\t\tlast_bold = ind;\n\t}\n\n\tfunction unbold(ind) {\n\t\tif (ind < 0) return;\n\t\tdocument.querySelector(`.note-${ind}`).classList.remove(\"note_bold\");\n\t\tdocument.querySelector(`.note-${ind}`).style.fontWeight = \"normal\";\n\t\tdocument.querySelector(`.note-${ind}`).style.fontSize = \"16px\";\n\t}\n\n\tfunction new_note(ind) {\n\t\tif (ind < 1) return true;\n\t\treturn notesArr[ind -1] != notesArr[ind];\n\t}\n\n\tvar body = document.querySelector(\".result\");\n\tvar button = document.querySelector(\".play_button\");\n\tvar audio = document.querySelector(\".audio\");\n\tvar notes = document.createElement('div');\n\tnotes.classList.add(\"notes\");\n\tnotes.style.display = \"flex\";\n\tnotes.style.flexWrap = \"wrap\";\n\tnotes.style.justifyContent = \"space-around\";\n\n\tvar noteEls\n\tfor (var i = 0; i < notesArr.length; i++) {\n\t\tif (new_note(i)) {\n\t\t\tvar noteEl = document.createElement(\"div\");\n\t\t\tnoteEl.innerHTML = notesArr[i];\n\t\t\tnoteEl.classList.add(\"note\");\n\t\t\tnoteEl.classList.add(`note-${i}`);\n\t\t\tnoteEl.style.textAlign = \"center\";\n\t\t\tnoteEl.style.width = \"30px\";\n\t\t\tnotes.appendChild(noteEl);\n\t\t}\n\t}\n\n\tbutton.addEventListener(\"click\", () => {\n\t\taudio.currentTime = 0;\n\t\taudio.play();\n\t\tplay();\n\t});\n\n\tbody.appendChild(notes);\n}","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/CardActionArea\");","module.exports = require(\"@material-ui/core/CardActions\");","module.exports = require(\"@material-ui/core/CardMedia\");","module.exports = require(\"@material-ui/core/CircularProgress\");","module.exports = require(\"@material-ui/core/CssBaseline\");","module.exports = require(\"@material-ui/core/ExpansionPanel\");","module.exports = require(\"@material-ui/core/ExpansionPanelDetails\");","module.exports = require(\"@material-ui/core/ExpansionPanelSummary\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/LinearProgress\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/ExpandMore\");","module.exports = require(\"axios\");","module.exports = require(\"http\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"recharts\");","module.exports = require(\"victory\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAgBA;AACA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsDA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAtEA;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AA/GA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoFA;;;;AAvRA;AACA;AAyRA;;;;;;;;;;;;AC/VA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC1HA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}