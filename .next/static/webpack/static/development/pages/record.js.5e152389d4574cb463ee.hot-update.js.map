{"version":3,"file":"static/webpack/static/development/pages/record.js.5e152389d4574cb463ee.hot-update.js","sources":["webpack:///./scripts/record-script.js"],"sourcesContent":["// let audioContext =  new (window.AudioContext || window.webkitAudioContext)();\n// let recorder = new Recorder(audioContext);\n\nexport const recording = () => {\n  if (navigator.mediaDevices.getUserMedia) {\n    console.log('getUserMedia supported.');\n  \n    var constraints = { audio: true };\n    var chunks = [];\n  \n    var onSuccess = function(stream) {\n      var mediaRecorder = new MediaRecorder(stream);\n  \n      // visualize(stream);\n  \n      record.onclick = function() {\n        mediaRecorder.start();\n        console.log(mediaRecorder.state);\n        console.log(\"recorder started\");\n        record.style.background = \"red\";\n  \n        stop.disabled = false;\n        record.disabled = true;\n      }\n  \n      stop.onclick = function() {\n        mediaRecorder.stop();\n        console.log(mediaRecorder.state);\n        console.log(\"recorder stopped\");\n        record.style.background = \"\";\n        record.style.color = \"\";\n        // mediaRecorder.requestData();\n  \n        stop.disabled = true;\n        record.disabled = false;\n      }\n  \n      mediaRecorder.onstop = function(e) {\n        console.log(\"data available after MediaRecorder.stop() called.\");\n  \n        var clipName = prompt('Enter a name for your sound clip?','My unnamed clip');\n        console.log(clipName);\n        var clipContainer = document.createElement('article');\n        var clipLabel = document.createElement('p');\n        var audio = document.createElement('audio');\n        var deleteButton = document.createElement('button');\n       \n        clipContainer.classList.add('clip');\n        audio.setAttribute('controls', '');\n        deleteButton.textContent = 'Delete';\n        deleteButton.className = 'delete';\n  \n        if(clipName === null) {\n          clipLabel.textContent = 'My unnamed clip';\n        } else {\n          clipLabel.textContent = clipName;\n        }\n  \n        clipContainer.appendChild(audio);\n        clipContainer.appendChild(clipLabel);\n        clipContainer.appendChild(deleteButton);\n        soundClips.appendChild(clipContainer);\n  \n        audio.controls = true;\n        var blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n        chunks = [];\n        var audioURL = window.URL.createObjectURL(blob);\n        audio.src = audioURL;\n        console.log(\"recorder stopped\");\n  \n        deleteButton.onclick = function(e) {\n          evtTgt = e.target;\n          evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n        }\n  \n        clipLabel.onclick = function() {\n          var existingName = clipLabel.textContent;\n          var newClipName = prompt('Enter a new name for your sound clip?');\n          if(newClipName === null) {\n            clipLabel.textContent = existingName;\n          } else {\n            clipLabel.textContent = newClipName;\n          }\n        }\n      }\n  \n      mediaRecorder.ondataavailable = function(e) {\n        chunks.push(e.data);\n      }\n    }\n  \n    var onError = function(err) {\n      console.log('The following error occured: ' + err);\n    }\n  \n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  \n  } \n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}