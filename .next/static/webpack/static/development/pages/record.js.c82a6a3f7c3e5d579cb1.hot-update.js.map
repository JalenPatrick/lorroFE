{"version":3,"file":"static/webpack/static/development/pages/record.js.c82a6a3f7c3e5d579cb1.hot-update.js","sources":["webpack:///./pages/record.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Layout from '../components/Layout'\nimport { Typography, ButtonBase, DialogTitle } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport Recorder from 'recorder-js';\nimport { recording } from '../scripts/record-script';\nimport { saveAs } from 'file-saver';\n\n\nconst styles = {\n    textAlign: \"center\",\n    height: \"30vh\"\n}\n\nconst buttonStyle = {\n    marginLeft: \"20px\",\n    marginRight: \"20px\"\n}\n\n// audio stuff\nlet blob = null;\nlet mediaRecorder, audioURL;\nlet chunks = [];\n\n\nclass record extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            appIsMounted: false,\n            recording: false,\n            completedRecording: false,\n        };\n    }\n\n    \n\n    componentDidMount() {\n        requestAnimationFrame(() => {\n            this.setState({ appIsMounted: true });\n        });\n\n        // initialize stuff for audio recording\n        // audioCtx = new (window.AudioContext || webkitAudioContext)();\n        const constraints = {audio: true};\n        navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n            mediaRecorder = new MediaRecorder(stream)\n        })\n\n        console.log(this.state)\n    }\n\n    recordStart = () => {\n        // initialize the audio recorder stuff\n        this.setState({recording:true});\n        audioContext =  new (window.AudioContext || window.webkitAudioContext)();\n        mediaRecorder.start();\n    }\n\n    recordStop = () => {\n        mediaRecorder.stop();\n\n        this.setState({completedRecording: true})\n        this.setState({recording:false});\n\n        mediaRecorder.ondataavailable = function(e) {\n            chunks.push(e.data);\n            blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            audioURL = window.URL.createObjectURL(blob);\n        }\n    }\n\n    recordPlay = () => {\n        const a = new Audio(audioURL);\n        a.play();\n    }\n\n    render() {\n        if (this.state.appIsMounted) {\n            return (\n                <div>\n                    {/* { this.state.appIsMounted && React.createElement(require('recorder-js').default)} */}\n                    <Layout>\n                        <Paper elevation={\"1\"}>\n                            <Grid container spacing={24}>\n\n                                {/* title and subtitle */}\n                                <Grid item xs={12} style={styles}>\n                                    <Typography variant=\"h1\" component=\"h3\">\n                                        Record\n                                    </Typography>\n                                    <Typography variant=\"h4\">\n                                        The interactive speech training suite\n                                    </Typography>\n                                </Grid>\n                                {/* start/stop buttons */}\n                                <Grid container xs={12} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" justify=\"center\" alignContent=\"space-between\">\n                                    <Button\n                                        style={buttonStyle}\n                                        size='large'\n                                        variant='contained'\n                                        color='secondary'\n                                        onClick={this.recordStart}>\n                                    Record Sample </Button>\n                                    <Button\n                                        style={buttonStyle}\n                                        size='large'\n                                        variant='contained'\n                                        color='secondary'\n                                        onClick={this.recordStop}\n                                        disabled={!this.state.recording}>\n                                    Stop Recording </Button>\n                                    <Button\n                                        style={buttonStyle}\n                                        size='large'\n                                        variant='contained'\n                                        color='secondary'\n                                        onClick={this.recordPlay}\n                                        disabled={!this.state.completedRecording}> \n                                    Play Recording </Button>\n                                </Grid>\n                                <Grid container xs={12} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" justify=\"center\">\n                                    \n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Layout>\n                </div>\n            );\n        } else {\n            return false;\n        }\n    }\n}\n\nexport default record"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA2BA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAhCA;AAkCA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AACA;AAhDA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;AA2BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;;;;AA5GA;AACA;AA8GA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}