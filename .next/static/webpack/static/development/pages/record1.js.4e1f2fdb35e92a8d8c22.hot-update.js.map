{"version":3,"file":"static/webpack/static/development/pages/record1.js.4e1f2fdb35e92a8d8c22.hot-update.js","sources":["webpack:///./pages/record1.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Layout from '../components/Layout'\nimport { Typography, ButtonBase, DialogTitle } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport axios from 'axios'\n\nimport Recorder from 'recorder-js';\nimport { recording } from '../scripts/record-script';\nimport { saveAs } from 'file-saver';\n\n\nconst group = {\n    height: \"30vh\",\n    textAlign: \"center\"\n}\n\nconst buttonGroup = {\n    height: \"10vh\",\n    textAlign: \"center\"\n}\n\nconst buttonStyle = {\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    minWidth: \"20vmin\"\n}\n\nconst submitButton = {\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    width: \"50vw\"\n}\n\n// audio stuff\nlet isRecording = false;\nlet blob = null;\nlet audioContext, audioURL;\nlet recorder;\n\n\nclass record extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            appIsMounted: false,\n            recording: false,\n            completedRecording: false,\n        };\n    }\n\n    componentDidMount() {\n        requestAnimationFrame(() => {\n            this.setState({ appIsMounted: true });\n        });\n\n        const constraints = {audio: true};\n        const cons = { audio: true }\n        navigator.mediaDevices.getUserMedia(cons).then(stream => {\n            audioContext =  new (window.AudioContext || window.webkitAudioContext)();\n            recorder = new Recorder(audioContext)\n            recorder.init(stream)\n            console.log(recorder)\n        })\n    }\n\n    recordStart = () => {\n        // initialize the audio recorder stuff\n        blob = null;\n        audioURL = null;\n        this.setState({recording:true});\n        recorder.start();\n    }\n\n    recordStop = async () => {\n        await recorder.stop().then(({blob, buffer}) => {\n            blob = blob;\n            audioURL = window.URL.createObjectURL(blob);\n        })\n\n        this.setState({completedRecording: true})\n        this.setState({recording:false});\n    }\n\n    createDownloadLink = () => {\n        const fileName = new Date().toISOString();\n        console.log(fileName)\n    }\n\n    recordPlay = () => {\n        const a = new Audio(audioURL);\n        a.play();\n    }\n\n    submitRecording = () => {\n        // this saves a local copy of the audio\n        saveAs(audioURL, \"lorro_record.wav\");\n    }\n\n    render() {\n        if (this.state.appIsMounted) {\n            return (\n                <div>\n                    <Layout>\n                        <Paper elevation={\"1\"}>\n                            <Grid container spacing={24}>\n                                {/* title and subtitle */}\n                                <Grid item xs={12} style={group}>\n                                    <Typography variant=\"h1\" component=\"h3\">\n                                        Record\n                                    </Typography>\n                                    <Typography variant=\"h5\">\n                                        Click the record button and record an attempt to match your selected speech sample.\n                                    </Typography>\n                                </Grid>\n                                {/* start/stop buttons */}\n                                <Grid style={buttonGroup} container xs={12} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" justify=\"center\" alignContent=\"space-between\">\n                                    <Button\n                                        style={buttonStyle}\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.recordStart}>\n                                    Record Sample </Button>\n                                    <Button\n                                        style={buttonStyle}\n                                        variant='contained'\n                                        color='secondary'\n                                        onClick={this.recordStop}\n                                        disabled={!this.state.recording}>\n                                    Stop Recording </Button>\n                                    <Button\n                                        style={buttonStyle}\n                                        variant='contained'\n                                        color='default'\n                                        onClick={this.recordPlay}\n                                        disabled={!this.state.completedRecording}> \n                                    Play Recording </Button>\n                                    <Button\n                                        style={buttonStyle}\n                                        variant='contained'\n                                        color='default'\n                                        onClick={this.recordPlay}\n                                        disabled={!this.state.completedRecording}> \n                                    Download </Button>\n                                </Grid>\n                                <Grid style={buttonGroup} container xs={12} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" justify=\"center\">\n                                    <div>\n                                        <Button\n                                            style={submitButton}\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={this.submitRecording}\n                                            disabled={!this.state.completedRecording}> \n                                        Submit Recording </Button>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Layout>\n                </div>\n            );\n        } else {\n            return false;\n        }\n    }\n}\n\nexport default record"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjCA;AA2CA;AACA;AACA;AACA;AA9CA;AAgDA;AACA;AACA;AACA;AAnDA;AAqDA;AACA;AACA;AACA;AAtDA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAmcA;AACA;AACA;AACA;;;;AA5HA;AACA;AA8HA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}