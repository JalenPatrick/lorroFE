(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["file-upload-react"] = factory(require("react"));
	else
		root["file-upload-react"] = factory(root["React"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_2__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!****************************************!*\
  !*** multi ./src/file-upload-react.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/iangreulich/apps/file-upload-react/src/file-upload-react.js */1);


/***/ }),
/* 1 */
/*!**********************************!*\
  !*** ./src/file-upload-react.js ***!
  \**********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Created by cheesu on 2015/8/17.\n */\n\n/**\n * React文件上传组件，兼容IE8+\n * 现代浏览器采用AJAX（XHR2+File API）上传。低版本浏览器使用form+iframe上传。\n * 使用到ES6，需要经babel转译\n */\n\n/*eslint indent: 0 */\nvar React = __webpack_require__(/*! react */ 2);\nvar emptyFunction = function emptyFunction() {};\n/*当前IE上传组的id*/\nvar currentIEID = 0;\n/*存放当前IE上传组的可用情况*/\nvar IEFormGroup = [true];\n/*当前xhr的数组（仅有已开始上传之后的xhr）*/\nvar xhrList = [];\nvar currentXHRID = 0;\n\nvar PT = React.PropTypes;\n\nvar FileUpload = React.createClass({\n    displayName: 'FileUpload',\n\n\n    /*类型验证*/\n    propTypes: {\n        options: PT.shape({\n            /*basics*/\n            baseUrl: PT.string.isRequired,\n            param: PT.oneOfType([PT.object, PT.func]),\n            dataType: PT.string,\n            chooseAndUpload: PT.bool,\n            paramAddToField: PT.oneOfType([PT.object, PT.func]),\n            wrapperDisplay: PT.string,\n            timeout: PT.number,\n            accept: PT.string,\n            multiple: PT.bool,\n            numberLimit: PT.oneOfType([PT.number, PT.func]),\n            fileFieldName: PT.oneOfType([PT.string, PT.func]),\n            withCredentials: PT.bool,\n            requestHeaders: PT.object,\n            /*specials*/\n            tag: PT.string,\n            userAgent: PT.string,\n            disabledIEChoose: PT.oneOfType([PT.bool, PT.func]),\n            _withoutFileUpload: PT.bool,\n            filesToUpload: PT.arrayOf(PT.object),\n            textBeforeFiles: PT.bool,\n            /*funcs*/\n            beforeChoose: PT.func,\n            chooseFile: PT.func,\n            beforeUpload: PT.func,\n            doUpload: PT.func,\n            uploading: PT.func,\n            uploadSuccess: PT.func,\n            uploadError: PT.func,\n            uploadFail: PT.func,\n            onabort: PT.func\n        }).isRequired,\n        style: PT.object,\n        className: PT.string\n    },\n\n    /*根据props更新组件*/\n    _updateProps: function _updateProps(props) {\n        var _this = this;\n\n        this.isIE = !(this.checkIE() < 0 || this.checkIE() >= 10);\n        var options = props.options;\n        this.baseUrl = options.baseUrl; //域名\n        this.param = options.param; //get参数\n        this.chooseAndUpload = options.chooseAndUpload || false; //是否在用户选择了文件之后立刻上传\n        this.paramAddToField = options.paramAddToField || undefined; //需要添加到FormData的对象。不支持IE\n        /*upload success 返回resp的格式*/\n        this.dataType = 'json';\n        options.dataType && options.dataType.toLowerCase() == 'text' && (this.dataType = 'text');\n        this.wrapperDisplay = options.wrapperDisplay || 'inline-block'; //包裹chooseBtn或uploadBtn的div的display\n        this.timeout = typeof options.timeout == 'number' && options.timeout > 0 ? options.timeout : 0; //超时时间\n        this.accept = options.accept || ''; //限制文件后缀\n        this.multiple = options.multiple || false;\n        this.numberLimit = options.numberLimit || false; //允许多文件上传时，选择文件数量的限制\n        this.fileFieldName = options.fileFieldName || false; //文件附加到formData上时的key，传入string指定一个file的属性名，值为其属性的值。不支持IE\n        this.withCredentials = options.withCredentials || false; //跨域时是否使用认证信息\n        this.requestHeaders = options.requestHeaders || false; //要设置的请求头键值对\n\n        /*生命周期函数*/\n        /**\n         * beforeChoose() : 用户选择之前执行，返回true继续，false阻止用户选择\n         * @param  null\n         * @return  {boolean} 是否允许用户进行选择\n         */\n        this.beforeChoose = options.beforeChoose || emptyFunction;\n        /**\n         * chooseFile(file) : 用户选择文件后的触发的回调函数\n         * @param file {File | string} 现代浏览器返回File对象，IE返回文件名\n         * @return\n         */\n        this.chooseFile = options.chooseFile || emptyFunction;\n        /**\n         * beforeUpload(file,mill) : 用户上传之前执行，返回true继续，false阻止用户选择\n         * @param file {File | string} 现代浏览器返回File对象，IE返回文件名\n         * @param mill {long} 毫秒数，如果File对象已有毫秒数则返回一样的\n         * @return  {boolean || object} 是否允许用户进行上传 (hack:如果是obj{\n         *     assign:boolean 默认true\n         *     param:object\n         * }), 则对本次的param进行处理\n         */\n        this.beforeUpload = options.beforeUpload || emptyFunction;\n        /**\n         * doUpload(file,mill) : 上传动作(xhr send | form submit)执行后调用\n         * @param file {File | string} 现代浏览器返回File对象，IE返回文件名\n         * @param mill {long} 毫秒数，如果File对象已有毫秒数则返回一样的\n         * @return\n         */\n        this.doUpload = options.doUpload || emptyFunction;\n        /**\n         * uploading(progress) : 在文件上传中的时候，浏览器会不断触发此函数。IE中使用每200ms触发的假进度\n         * @param progress {Progress} progress对象，里面存有例如上传进度loaded和文件大小total等属性\n         * @return\n         */\n        this.uploading = options.uploading || emptyFunction;\n        /**\n         * uploadSuccess(resp) : 上传成功后执行的回调（针对AJAX而言）\n         * @param resp {json | string} 根据options.dataType指定返回数据的格式\n         * @return\n         */\n        this.uploadSuccess = options.uploadSuccess || emptyFunction;\n        /**\n         * uploadError(err) : 上传错误后执行的回调（针对AJAX而言）\n         * @param err {Error | object} 如果返回catch到的error，其具有type和message属性\n         * @return\n         */\n        this.uploadError = options.uploadError || emptyFunction;\n        /**\n         * uploadFail(resp) : 上传失败后执行的回调（针对AJAX而言）\n         * @param resp {string} 失败信息\n         */\n        this.uploadFail = options.uploadFail || emptyFunction;\n        /**\n         * onabort(mill, xhrID) : 主动取消xhr进程的响应\n         * @param mill {long} 毫秒数，本次上传时刻的时间\n         * @param xhrID {int} 在doUpload时会返回的当次xhr代表ID\n         */\n        this.onabort = options.onabort || emptyFunction;\n\n        this.files = options.files || this.files || false; //保存需要上传的文件\n        /*特殊内容*/\n\n        /*IE情况下，由于上传按钮被隐藏的input覆盖，不能进行disabled按钮处理。\n         * 所以当disabledIEChoose为true（或者func返回值为true）时，禁止IE上传。\n         */\n        this.disabledIEChoose = options.disabledIEChoose || false;\n\n        this._withoutFileUpload = options._withoutFileUpload || false; //不带文件上传，为了给秒传功能使用，不影响IE\n        this.filesToUpload = options.filesToUpload || []; //使用filesToUpload()方法代替\n        this.textBeforeFiles = options.textBeforeFiles || false; //make this true to add text fields before file data\n        /*使用filesToUpload()方法代替*/\n        if (this.filesToUpload.length && !this.isIE) {\n            this.filesToUpload.forEach(function (file) {\n                _this.files = [file];\n                _this.commonUpload();\n            });\n        }\n\n        /*放置虚拟DOM*/\n        var chooseBtn = void 0,\n            uploadBtn = void 0,\n            flag = 0;\n        var before = [],\n            middle = [],\n            after = [];\n        if (this.chooseAndUpload) {\n            React.Children.forEach(props.children, function (child) {\n                if (child && child.ref == 'chooseAndUpload') {\n                    chooseBtn = child;\n                    flag++;\n                } else {\n                    flag == 0 ? before.push(child) : flag == 1 ? middle.push(child) : '';\n                }\n            });\n        } else {\n            React.Children.forEach(props.children, function (child) {\n                if (child && child.ref == 'chooseBtn') {\n                    chooseBtn = child;\n                    flag++;\n                } else if (child && child.ref == 'uploadBtn') {\n                    uploadBtn = child;\n                    flag++;\n                } else {\n                    flag == 0 ? before.push(child) : flag == 1 ? middle.push(child) : after.push(child);\n                }\n            });\n        }\n        this.setState({\n            chooseBtn: chooseBtn,\n            uploadBtn: uploadBtn,\n            before: before,\n            middle: middle,\n            after: after\n        });\n    },\n\n\n    /*触发隐藏的input框选择*/\n    /*触发beforeChoose*/\n    commonChooseFile: function commonChooseFile() {\n        var jud = this.beforeChoose();\n        if (jud != true && jud != undefined) return;\n        this.refs['ajax_upload_file_input'].click();\n    },\n\n    /*现代浏览器input change事件。File API保存文件*/\n    /*触发chooseFile*/\n    commonChange: function commonChange(e) {\n        var files = void 0;\n        e.dataTransfer ? files = e.dataTransfer.files : e.target ? files = e.target.files : '';\n\n        /*如果限制了多文件上传时的数量*/\n        var numberLimit = typeof this.numberLimit === 'function' ? this.numberLimit() : this.numberLimit;\n        if (this.multiple && numberLimit && files.length > numberLimit) {\n            var newFiles = {};\n            for (var i = 0; i < numberLimit; i++) {\n                newFiles[i] = files[i];\n            }newFiles.length = numberLimit;\n            files = newFiles;\n        }\n        this.files = files;\n        this.chooseFile(files);\n        this.chooseAndUpload && this.commonUpload();\n    },\n\n\n    /*执行上传*/\n    commonUpload: function commonUpload() {\n        var _this2 = this;\n\n        /*mill参数是当前时刻毫秒数，file第一次进行上传时会添加为file的属性，也可在beforeUpload为其添加，之后同一文件的mill不会更改，作为文件的识别id*/\n        var mill = this.files.length && this.files[0].mill || new Date().getTime();\n        var jud = this.beforeUpload(this.files, mill);\n        if (jud != true && jud != undefined && (typeof jud === 'undefined' ? 'undefined' : _typeof(jud)) != 'object') {\n            /*清除input的值*/\n            this.refs['ajax_upload_file_input'].value = '';\n            return;\n        }\n\n        if (!this.files) return;\n        if (!this.baseUrl) throw new Error('baseUrl missing in options');\n\n        /*用于存放当前作用域的东西*/\n        var scope = {};\n        /*组装FormData*/\n        var formData = new FormData();\n        /*If we need to add fields before file data append here*/\n        if (this.textBeforeFiles) {\n            formData = this.appendFieldsToFormData(formData);\n        }\n        if (!this._withoutFileUpload) {\n            var fieldNameType = _typeof(this.fileFieldName);\n\n            /*判断是用什么方式作为formdata item 的 name*/\n            Object.keys(this.files).forEach(function (key) {\n                if (key == 'length') return;\n\n                if (fieldNameType == 'function') {\n                    var file = _this2.files[key];\n                    var fileFieldName = _this2.fileFieldName(file);\n                    formData.append(fileFieldName, file);\n                } else if (fieldNameType == 'string') {\n                    var _file = _this2.files[key];\n                    formData.append(_this2.fileFieldName, _file);\n                } else {\n                    var _file2 = _this2.files[key];\n                    formData.append(_file2.name, _file2);\n                }\n            });\n        }\n        /*If we need to add fields after file data append here*/\n        if (!this.textBeforeFiles) {\n            formData = this.appendFieldsToFormData(formData);\n        }\n        var baseUrl = this.baseUrl;\n\n        /*url参数*/\n        /*如果param是一个函数*/\n        var param = typeof this.param === 'function' ? this.param(this.files) : this.param;\n\n        var paramStr = '';\n\n        if (param) {\n            var paramArr = [];\n            param['_'] = mill;\n            Object.keys(param).forEach(function (key) {\n                return paramArr.push(key + '=' + param[key]);\n            });\n            paramStr = '?' + paramArr.join('&');\n        }\n        var targeturl = baseUrl + paramStr;\n\n        /*AJAX上传部分*/\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', targeturl, true);\n\n        /*跨域是否开启验证信息*/\n        xhr.withCredentials = this.withCredentials;\n        /*是否需要设置请求头*/\n        var rh = this.requestHeaders;\n        rh && Object.keys(rh).forEach(function (key) {\n            return xhr.setRequestHeader(key, rh[key]);\n        });\n\n        /*处理超时。用定时器判断超时，不然xhr state=4 catch的错误无法判断是超时*/\n        if (this.timeout) {\n            xhr.timeout = this.timeout;\n            xhr.ontimeout = function () {\n                _this2.uploadError({ type: 'TIMEOUTERROR', message: 'timeout' });\n                scope.isTimeout = false;\n            };\n            scope.isTimeout = false;\n            setTimeout(function () {\n                scope.isTimeout = true;\n            }, this.timeout);\n        }\n\n        xhr.onreadystatechange = function () {\n            /*xhr finish*/\n            try {\n                if (xhr.readyState == 4 && xhr.status >= 200 && xhr.status < 400) {\n                    var resp = _this2.dataType == 'json' ? JSON.parse(xhr.responseText) : xhr.responseText;\n                    _this2.uploadSuccess(resp);\n                } else if (xhr.readyState == 4) {\n                    /*xhr fail*/\n                    var _resp = _this2.dataType == 'json' ? JSON.parse(xhr.responseText) : xhr.responseText;\n                    _this2.uploadFail(_resp);\n                }\n            } catch (e) {\n                /*超时抛出不一样的错误，不在这里处理*/\n                !scope.isTimeout && _this2.uploadError({ type: 'FINISHERROR', message: e.message });\n            }\n        };\n        /*xhr error*/\n        xhr.onerror = function () {\n            try {\n                var resp = _this2.dataType == 'json' ? JSON.parse(xhr.responseText) : xhr.responseText;\n                _this2.uploadError({ type: 'XHRERROR', message: resp });\n            } catch (e) {\n                _this2.uploadError({ type: 'XHRERROR', message: e.message });\n            }\n        };\n        /*这里部分浏览器实现不一致，而且IE没有这个方法*/\n        xhr.onprogress = xhr.upload.onprogress = function (progress) {\n            _this2.uploading(progress, mill);\n        };\n\n        /*不带文件上传，给秒传使用*/\n        this._withoutFileUpload ? xhr.send(null) : xhr.send(formData);\n\n        /*保存xhr id*/\n        xhrList.push(xhr);\n        var cID = xhrList.length - 1;\n        currentXHRID = cID;\n\n        /*有响应abort的情况*/\n        xhr.onabort = function () {\n            return _this2.onabort(mill, cID);\n        };\n\n        /*trigger执行上传的用户回调*/\n        this.doUpload(this.files, mill, currentXHRID);\n\n        /*清除input的值*/\n        this.refs['ajax_upload_file_input'].value = '';\n    },\n\n\n    /*组装自定义添加到FormData的对象*/\n    appendFieldsToFormData: function appendFieldsToFormData(formData) {\n        var field = typeof this.paramAddToField == 'function' ? this.paramAddToField() : this.paramAddToField;\n        field && Object.keys(field).map(function (index) {\n            return formData.append(index, field[index]);\n        });\n        return formData;\n    },\n\n\n    /*iE选择前验证*/\n    /*触发beforeChoose*/\n    IEBeforeChoose: function IEBeforeChoose(e) {\n        var jud = this.beforeChoose();\n        jud != true && jud != undefined && e.preventDefault();\n    },\n\n    /*IE需要用户真实点击上传按钮，所以使用透明按钮*/\n    /*触发chooseFile*/\n    IEChooseFile: function IEChooseFile(e) {\n        this.fileName = e.target.value.substring(e.target.value.lastIndexOf('\\\\') + 1);\n        this.chooseFile(this.fileName);\n        /*先执行IEUpload，配置好action等参数，然后submit*/\n        this.chooseAndUpload && this.IEUpload() !== false && document.getElementById('ajax_upload_file_form_' + this.IETag + currentIEID).submit();\n        e.target.blur();\n    },\n\n    /*IE处理上传函数*/\n    /*触发beforeUpload doUpload*/\n    IEUpload: function IEUpload(e) {\n        var _this3 = this;\n\n        var mill = new Date().getTime();\n        var jud = this.beforeUpload(this.fileName, mill);\n        if (!this.fileName || jud != true && jud != undefined) {\n            e && e.preventDefault();\n            return false;\n        }\n        var that = this;\n\n        /*url参数*/\n        var baseUrl = this.baseUrl;\n\n        var param = typeof this.param === 'function' ? this.param(this.fileName) : this.param;\n        var paramStr = '';\n\n        if (param) {\n            var paramArr = [];\n            param['_'] = mill;\n            param['ie'] === undefined && (param['ie'] = 'true');\n            for (var key in param) {\n                if (param[key] != undefined) paramArr.push(key + '=' + param[key]);\n            }\n            paramStr = '?' + paramArr.join('&');\n        }\n        var targeturl = baseUrl + paramStr;\n\n        document.getElementById('ajax_upload_file_form_' + this.IETag + currentIEID).setAttribute('action', targeturl);\n        /*IE假的上传进度*/\n        var getFakeProgress = this.fakeProgress();\n        var loaded = 0,\n            count = 0;\n\n        var progressInterval = setInterval(function () {\n            loaded = getFakeProgress(loaded);\n            _this3.uploading({\n                loaded: loaded,\n                total: 100\n            }, mill);\n            /*防止永久执行，设定最大的次数。暂时为30秒(200*150)*/\n            ++count >= 150 && Interval(progressInterval);\n        }, 200);\n\n        /*当前上传id*/\n        var partIEID = currentIEID;\n        /*回调函数*/\n        window.attachEvent ? document.getElementById('ajax_upload_file_frame_' + this.IETag + partIEID).attachEvent('onload', handleOnLoad) : document.getElementById('ajax_upload_file_frame_' + this.IETag + partIEID).addEventListener('load', handleOnLoad);\n\n        function handleOnLoad() {\n            /*clear progress interval*/\n            clearInterval(progressInterval);\n            try {\n                that.uploadSuccess(that.IECallback(that.dataType, partIEID));\n            } catch (e) {\n                that.uploadError(e);\n            } finally {\n                /*Clear the value of the input box*/\n            }\n        }\n        this.doUpload(this.fileName, mill);\n        /*置为非空闲*/\n        IEFormGroup[currentIEID] = false;\n    },\n\n    /*IE回调函数*/\n    //TODO 处理Timeout\n    IECallback: function IECallback(dataType, frameId) {\n        /*回复空闲状态*/\n        IEFormGroup[frameId] = true;\n\n        var frame = document.getElementById('ajax_upload_file_frame_' + this.IETag + frameId);\n        var resp = {};\n        var content = frame.contentWindow ? frame.contentWindow.document.body : frame.contentDocument.document.body;\n        if (!content) throw new Error('Your browser does not support async upload');\n        try {\n            resp.responseText = content.innerHTML || 'null innerHTML';\n            resp.json = JSON ? JSON.parse(resp.responseText) : eval('(' + resp.responseText + ')');\n        } catch (e) {\n            /*如果是包含了<pre>*/\n            if (e.message && e.message.indexOf('Unexpected token') >= 0) {\n                /*包含返回的json*/\n                if (resp.responseText.indexOf('{') >= 0) {\n                    var msg = resp.responseText.substring(resp.responseText.indexOf('{'), resp.responseText.lastIndexOf('}') + 1);\n                    return JSON ? JSON.parse(msg) : eval('(' + msg + ')');\n                }\n                return { type: 'FINISHERROR', message: e.message };\n            }\n            throw e;\n        }\n        return dataType == 'json' ? resp.json : resp.responseText;\n    },\n\n\n    /*外部调用方法，主动触发选择文件（等同于调用btn.click()), 仅支持现代浏览器*/\n    forwardChoose: function forwardChoose() {\n        if (this.isIE) return false;\n        this.commonChooseFile();\n    },\n\n\n    /**\n     * 外部调用方法，当多文件上传时，用这个方法主动删除列表中某个文件\n     * TODO: 此方法应为可以任意操作文件数组\n     * @param func 用户调用时传入的函数，函数接收参数files（filesAPI 对象）\n     * @return Obj File API 对象\n     * File API Obj:\n     * {\n     *   0 : file,\n     *   1 : file,\n     *   length : 2\n     * }\n     */\n    fowardRemoveFile: function fowardRemoveFile(func) {\n        this.files = func(this.files);\n    },\n\n\n    /*外部调用方法，传入files（File API）对象可以立刻执行上传动作，IE不支持。调用随后会触发beforeUpload*/\n    filesToUpload: function filesToUpload(files) {\n        if (this.isIE) return;\n        this.files = files;\n        this.commonUpload();\n    },\n\n\n    /*外部调用方法，取消一个正在进行的xhr，传入id指定xhr（doupload时返回）或者默认取消最近一个。*/\n    abort: function abort(id) {\n        id === undefined ? xhrList[currentXHRID].abort() : xhrList[id].abort();\n    },\n\n\n    /*判断ie版本*/\n    checkIE: function checkIE() {\n        var userAgent = this.userAgent;\n        var version = userAgent.indexOf('MSIE');\n        if (version < 0) return -1;\n\n        return parseFloat(userAgent.substring(version + 5, userAgent.indexOf(';', version)));\n    },\n\n\n    /*生成假的IE上传进度*/\n    fakeProgress: function fakeProgress() {\n        var add = 6;\n        var decrease = 0.3,\n            end = 98,\n            min = 0.2;\n        return function (lastTime) {\n            var start = lastTime;\n            if (start >= end) return start;\n\n            start += add;\n            add = add - decrease;\n            add < min && (add = min);\n\n            return start;\n        };\n    },\n    getUserAgent: function getUserAgent() {\n        var userAgentString = this.props.options && this.props.options.userAgent;\n        var navigatorIsAvailable = typeof navigator !== 'undefined';\n        if (!navigatorIsAvailable && !userAgentString) {\n            throw new Error('\\`options.userAgent\\` must be set rendering react-fileuploader in situations when \\`navigator\\` is not defined in the global namespace. (on the server, for example)');\n        }\n        return navigatorIsAvailable ? navigator.userAgent : userAgentString;\n    },\n    getInitialState: function getInitialState() {\n        return {\n            chooseBtn: {}, //选择按钮。如果chooseAndUpload=true代表选择并上传。\n            uploadBtn: {}, //上传按钮。如果chooseAndUpload=true则无效。\n            before: [], //存放props.children中位于chooseBtn前的元素\n            middle: [], //存放props.children中位于chooseBtn后，uploadBtn前的元素\n            after: [] //存放props.children中位于uploadBtn后的元素,\n        };\n    },\n    componentWillMount: function componentWillMount() {\n        this.userAgent = this.getUserAgent();\n        this.isIE = !(this.checkIE() < 0 || this.checkIE() >= 10);\n        /*因为IE每次要用到很多form组，如果在同一页面需要用到多个<FileUpload>可以在options传入tag作为区分。并且不随后续props改变而改变*/\n        var tag = this.props.options && this.props.options.tag;\n        this.IETag = tag ? tag + '_' : '';\n\n        this._updateProps(this.props);\n    },\n    componentDidMount: function componentDidMount() {},\n    componentWillReceiveProps: function componentWillReceiveProps(newProps) {\n        this._updateProps(newProps);\n    },\n    render: function render() {\n        return this._packRender();\n    },\n\n\n    /*打包render函数*/\n    _packRender: function _packRender() {\n        /*IE用iframe表单上传，其他用ajax Formdata*/\n        var render = '';\n        if (this.isIE) {\n            render = this._multiIEForm();\n        } else {\n            var restAttrs = {\n                accept: this.accept,\n                multiple: this.multiple\n            };\n\n            render = React.createElement(\n                'div',\n                { className: this.props.className, style: this.props.style },\n                this.state.before,\n                React.createElement(\n                    'div',\n                    { onClick: this.commonChooseFile,\n                        style: { overflow: 'hidden', postion: 'relative', display: this.wrapperDisplay }\n                    },\n                    this.state.chooseBtn\n                ),\n                this.state.middle,\n                React.createElement(\n                    'div',\n                    { onClick: this.commonUpload,\n                        style: {\n                            overflow: 'hidden',\n                            postion: 'relative',\n                            display: this.chooseAndUpload ? 'none' : this.wrapperDisplay\n                        }\n                    },\n                    this.state.uploadBtn\n                ),\n                this.state.after,\n                React.createElement('input', _extends({ type: 'file', name: 'ajax_upload_file_input', ref: 'ajax_upload_file_input',\n                    style: { display: 'none' }, onChange: this.commonChange\n                }, restAttrs))\n            );\n        }\n        return render;\n    },\n\n\n    /*IE多文件同时上传，需要多个表单+多个form组合。根据currentIEID代表有多少个form。*/\n    /*所有不在空闲（正在上传）的上传组都以display:none的形式插入，第一个空闲的上传组会display:block捕捉。*/\n    _multiIEForm: function _multiIEForm() {\n        var formArr = [];\n        var hasFree = false;\n\n        /* IE情况下，由于上传按钮被隐藏的input覆盖，不能进行disabled按钮处理。\n         * 所以当disabledIEChoose为true（或者func返回值为true）时，禁止IE上传。\n         */\n        var isDisabled = typeof this.disabledIEChoose === 'function' ? this.disabledIEChoose() : this.disabledIEChoose;\n\n        /*这里IEFormGroup的长度会变，所以不能存len*/\n        for (var i = 0; i < IEFormGroup.length; i++) {\n            _insertIEForm.call(this, formArr, i);\n            /*如果当前上传组是空闲，hasFree=true，并且指定当前上传组ID*/\n            if (IEFormGroup[i] && !hasFree) {\n                hasFree = true;\n                currentIEID = i;\n            }\n            /*如果所有上传组都不是空闲状态，push一个新增组*/\n            i == IEFormGroup.length - 1 && !hasFree && IEFormGroup.push(true);\n        }\n\n        return React.createElement(\n            'div',\n            { className: this.props.className, style: this.props.style, id: 'react-file-uploader' },\n            formArr\n        );\n\n        function _insertIEForm(formArr, i) {\n            /*如果已经push了空闲组而当前也是空闲组*/\n            if (IEFormGroup[i] && hasFree) return;\n            /*是否display*/\n            var isShow = IEFormGroup[i];\n            /*Input内联样式*/\n            var style = {\n                position: 'absolute',\n                left: '-30px',\n                top: 0,\n                zIndex: '50',\n                fontSize: '80px',\n                width: '200px',\n                opacity: 0,\n                filter: 'alpha(opacity=0)'\n\n                /*是否限制了文件后缀，以及是否disabled*/\n            };var restAttrs = {\n                accept: this.accept,\n                disabled: isDisabled\n            };\n\n            var input = React.createElement('input', _extends({ type: 'file', name: 'ajax_upload_hidden_input_' + i, id: 'ajax_upload_hidden_input_' + i,\n                ref: 'ajax_upload_hidden_input_' + i, onChange: this.IEChooseFile, onClick: this.IEBeforeChoose,\n                style: style }, restAttrs));\n\n            i = '' + this.IETag + i;\n            formArr.push(React.createElement(\n                'form',\n                { id: 'ajax_upload_file_form_' + i, method: 'post', target: 'ajax_upload_file_frame_' + i,\n                    key: 'ajax_upload_file_form_' + i,\n                    encType: 'multipart/form-data', ref: 'form_' + i, onSubmit: this.IEUpload,\n                    style: { display: isShow ? 'block' : 'none' }\n                },\n                this.state.before,\n                React.createElement(\n                    'div',\n                    { style: { overflow: 'hidden', position: 'relative', display: 'inline-block' } },\n                    this.state.chooseBtn,\n                    input\n                ),\n                this.state.middle,\n                React.createElement(\n                    'div',\n                    { style: {\n                            overflow: 'hidden',\n                            position: 'relative',\n                            display: this.chooseAndUpload ? 'none' : this.wrapperDisplay\n                        }\n                    },\n                    this.state.uploadBtn,\n                    React.createElement('input', { type: 'submit',\n                        style: {\n                            position: 'absolute',\n                            left: 0,\n                            top: 0,\n                            fontSize: '50px',\n                            width: '200px',\n                            opacity: 0\n                        }\n                    })\n                ),\n                this.state.after\n            ));\n            formArr.push(React.createElement('iframe', { id: 'ajax_upload_file_frame_' + i,\n                name: 'ajax_upload_file_frame_' + i,\n                key: 'ajax_upload_file_frame_' + i,\n                className: 'ajax_upload_file_frame',\n                style: {\n                    display: 'none',\n                    width: 0,\n                    height: 0,\n                    margin: 0,\n                    border: 0\n                }\n            }));\n        }\n    }\n});\n\nmodule.exports = FileUpload;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!**************************************************************************************!*\
  !*** external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"} ***!
  \**************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_2__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCB7XCJyb290XCI6XCJSZWFjdFwiLFwiY29tbW9uanMyXCI6XCJyZWFjdFwiLFwiY29tbW9uanNcIjpcInJlYWN0XCIsXCJhbWRcIjpcInJlYWN0XCJ9P2MwMmYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzJfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCB7XCJyb290XCI6XCJSZWFjdFwiLFwiY29tbW9uanMyXCI6XCJyZWFjdFwiLFwiY29tbW9uanNcIjpcInJlYWN0XCIsXCJhbWRcIjpcInJlYWN0XCJ9XG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n");

/***/ })
/******/ ]);
});